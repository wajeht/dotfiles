[user]
	# Your Git identity and commit signing configuration
	user = wajeht
	email = 58354193+wajeht@users.noreply.github.com
	name = wajeht
	# Path to your SSH public key used for signing commits
    signingKey = ~/.ssh/id_ed25519.pub

[filter "lfs"]
	# Git LFS (Large File Storage) configuration
	clean = git-lfs clean -- %f        # Cleans files before adding to Git
	smudge = git-lfs smudge -- %f      # Restores files when checking out
	process = git-lfs filter-process   # Optimized LFS file processing
	required = true                    # Enforce LFS filters for tracked files

[push]
	# Automatically set up remote tracking branches when pushing for the first time
	autoSetupRemote = true

[http]
	# Increase HTTP post buffer to handle large pushes or fetches
	postBuffer = 524288000 # 500MB buffer size

[ssh]
	# Increase SSH buffer size for large operations (rarely needed but safe)
	postBuffer = 524288000 # 500MB buffer size

[pull]
	# Rebase instead of merge when pulling new changes (keeps history clean)
	rebase = true

[init]
	# Default branch name for new repositories
	defaultBranch = main

[alias]
	# Useful Git command shortcuts
	push = push --no-verify               # Push without pre-push hooks
	discard = restore .                   # Revert all local changes in working directory
	undo = reset --soft HEAD^             # Undo last commit but keep changes staged
	aicommit = "!f() { curl -s https://commit.jaw.dev/ | sh -s -- --no-verify; }; f" # Generate commit messages via your AI commit service
	auto = "!f() { git add -A && git aicommit && git push --no-verify ; }; f"       # Add, commit (AI), and push in one step
	pr-comments = "!zsh -c 'source ~/.zshrc && git_pr_comments'"                    # Show PR comments (custom zsh alias)
	diff-all = "!f() { zsh -c \"source ~/.zshrc && git_diff_all $*\"; }; f"         # Show diffs for all repos or branches (custom zsh alias)

[core]
	# Core Git behavior and editor preferences
	editor = nvim                      # Use Neovim as the default editor
	fsmonitor = true                   # Enable filesystem monitoring for faster status checks
	autocrlf = input                   # Normalize line endings (LF on Unix, CRLF ignored on input)
	excludesfile = ~/.gitignore_global # Global .gitignore file

[diff]
	# Configure how diffs are shown
	tool = vimdiff                     # Use vimdiff for manual diffs
	algorithm = histogram              # Smarter diff algorithm
	colorMoved = zebra                 # Highlight moved lines with alternating colors

[difftool]
	# Configure difftool behavior
	prompt = false                     # Don’t ask before opening difftool

[merge]
	# Merge behavior
	tool = vimdiff                     # Use vimdiff for merge conflict resolution
	conflictstyle = zdiff3             # Show common ancestor in merge conflicts (better context)

[mergetool]
	# Don’t keep backup files when resolving merges
	keepBackup = false

[color]
	# Enable colored output in Git commands
	ui = auto

[credential]
	# Cache credentials for one hour (3600 seconds)
	helper = cache
	cacheTimeout = 3600

[rebase]
	# Improve rebase workflow
	autosquash = true   # Automatically squash fixup! commits
	autostash = true    # Temporarily stash uncommitted changes before rebase

[branch]
	# Sort branches by last commit date (most recent first)
	sort = -committerdate

[fetch]
	# Clean up old remote-tracking branches
	prune = true
	# Write commit-graph for faster operations
	writeCommitGraph = true

[rerere]
	# Automatically remember and reuse conflict resolutions
	enabled = true
	# Auto-stage files after successful rerere resolution
	autoUpdate = true

[help]
	# Automatically correct mistyped Git commands after 1 second
	autocorrect = 10

[column]
	# Automatically format command output in columns where appropriate
	ui = "auto"

[commit]
	# Automatically sign all commits with your GPG/SSH key
	gpgSign = true

[gpg]
	format = ssh

